{"version":3,"file":"static/js/640.5cef4915.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/phonebook-css/ContactForm.module.css?f94a","components/Phonebook/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/phonebook-css/ContactList.module.css?3db5","components/Phonebook/ContactItem.jsx","components/Phonebook/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/phonebook-css/Filter.module.css?3207","components/Phonebook/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/phonebook-css/Phonebook.module.css?28a9","components/Phonebook/Phonebook.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__2Hlc1\",\"label\":\"ContactForm_label__V8rBG\",\"name\":\"ContactForm_name__IpTJk\",\"number\":\"ContactForm_number__6JJK7\",\"icon\":\"ContactForm_icon__qgBAp\",\"btn\":\"ContactForm_btn__3BhpO\"};","import { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BsFillPersonFill, BsFillTelephoneFill } from 'react-icons/bs';\r\nimport toast from 'react-hot-toast';\r\nimport shortid from 'shortid';\r\n\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\nimport { LoaderSpinner } from '../Spinner/Spinner';\r\n\r\nimport css from './phonebook-css/ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n  const loading = useSelector(contactsSelectors.getIsAddedContact);\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameId = useRef(shortid.generate());\r\n  const numberId = useRef(shortid.generate());\r\n\r\n  const handleContactChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(con => con.name.toLowerCase() === name.toLowerCase())) {\r\n      toast(`Name '${name}' is alresdy in contacts`);\r\n\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(con => con.number === number)) {\r\n      toast(`Number '${number}' is alresdy in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n    toast.success(`Contact '${name}' is added`);\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className={css.form}>\r\n        <label htmlFor={nameId.current} className={css.label}>\r\n          <BsFillPersonFill size={16} className={css.icon} /> Name:\r\n          <input\r\n            className={css.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            id={nameId.current}\r\n            onChange={handleContactChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <label htmlFor={numberId.current} className={css.label}>\r\n          <BsFillTelephoneFill size={12} className={css.icon} />\r\n          Number:\r\n          <input\r\n            className={css.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter number\"\r\n            value={number}\r\n            id={numberId.current}\r\n            onChange={handleContactChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\" className={css.btn} disabled={loading}>\r\n          {/* add contact */}\r\n          {loading ? <LoaderSpinner /> : 'add contact'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__k6RzN\",\"item\":\"ContactList_item__6ZfsQ\",\"btn\":\"ContactList_btn__EomGw\",\"contact\":\"ContactList_contact__cXRg+\",\"icon\":\"ContactList_icon__Kvzad\",\"name\":\"ContactList_name__trh62\"};","import { useDispatch, useSelector } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport { BsFillPersonFill, BsFillTelephoneFill } from 'react-icons/bs';\r\n\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport css from './phonebook-css/ContactList.module.css';\r\n\r\nexport default function ContactListItem({ id, name, number }) {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector(contactsSelectors.getDeletedContact);\r\n\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <li key={id} className={css.item}>\r\n      <div className={css.contact}>\r\n        <BsFillPersonFill size={16} className={css.icon} />\r\n        <span className={css.name}>{name}</span>\r\n        <BsFillTelephoneFill size={11} className={css.icon} />\r\n        <span>{number}</span>\r\n      </div>\r\n      <button\r\n        className={css.btn}\r\n        onClick={() => {\r\n          onDeleteContact(id);\r\n          toast.success(`Contact '${name}' deleted`);\r\n        }}\r\n        disabled={loading}\r\n      >\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\nimport ContactListItem from './ContactItem';\r\n\r\nimport css from './phonebook-css/ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n\r\n  contacts.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem key={id} id={id} name={name} number={number} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"inp\":\"Filter_inp__PQig+\"};","import { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\r\nimport css from './phonebook-css/Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={css.inp}\r\n        type=\"text\"\r\n        placeholder=\"Enter contact's name\"\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__VzWLq\",\"title\":\"Phonebook_title__U3m1u\",\"contacts\":\"Phonebook_contacts__Cq5kh\",\"filter\":\"Phonebook_filter__zppEP\"};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\nimport { LoaderSpinner } from '../../components/Spinner/Spinner';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport css from './phonebook-css/Phonebook.module.css';\r\n\r\nexport default function Phonebook() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelectors.getAllContacts);\r\n  const loading = useSelector(contactsSelectors.getLoading);\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <h1 className={css.title}>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2 className={css.contacts}>Contacts</h2>\r\n\r\n      {contacts.length !== 0 ? (\r\n        <Filter />\r\n      ) : (\r\n        <h3 className={css.filter}>Your contacts list is empty</h3>\r\n      )}\r\n\r\n      <ContactList />\r\n\r\n      {loading && <LoaderSpinner />}\r\n    </div>\r\n  );\r\n}","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","contactsSelectors","loading","useState","name","setName","number","setNumber","nameId","useRef","shortid","numberId","handleContactChange","e","target","value","onSubmit","preventDefault","find","con","toLowerCase","toast","contactsOperations","className","css","htmlFor","current","size","type","placeholder","id","onChange","pattern","title","required","disabled","ContactListItem","onClick","onDeleteContact","ContactList","sort","a","b","localeCompare","map","Filter","changeFilter","Phonebook","useEffect","length","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","i","_seed_","mask","log","LN2","step","_slicedToArray","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}